--> Generar requeriments.txt
	pip freeze > requeriments.txt

--> Cambiar a producción	 
	export DJANGO_SETTINGS_MODULE=EstudiandoDjago.settings
	export DJANGO_CONFIGURATION=Dev

	- tene en cuenta que Dev es la clase de configuracion

--> Crear el sites.
	from django.contrib.sites.models import Site
	Site.objects.create(domain='localhost:8000',name='localhost:8000')

	- para obtener el id 
	Site.objects.get(name='localhost:8000').id
	y guardarlo en el setting SITE_ID=

--> Eliminar base de datos de una app

	python manage.py sqlclear APP | python manage.py dbshell
	python manage.py sqlclear establishment_system | python manage.py dbshell

--> Graficar modelos
	python manage.py graph_models -a -g -o mis_modelos.png

--> Generando diagramas de clases
	--> Recomendacion
 	pyreverse -o png -p RecomendadorUD_recommends_class  RecomendadorUD/apps/recommender_system/ /usr/local/lib/python2.7/dist-packages/recsys/ RecomendadorUD/apps/externals/recommends/  --only-classnames

	pyreverse -o png -p RecomendadorUD_recommends  RecomendadorUD/apps/recommender_system/ /usr/local/lib/python2.7/dist-packages/recsys/ RecomendadorUD/apps/externals/recommends/  

	--> Total
	pyreverse -o pdf -p RecomendadorUD_all_classnames  RecomendadorUD/ /usr/local/lib/python2.7/dist-packages/recsys/ /usr/local/lib/python2.7/dist-packages/allauth/  --only-classnames

	pyreverse -o pdf -p RecomendadorUD_all  RecomendadorUD/ /usr/local/lib/python2.7/dist-packages/recsys/ /usr/local/lib/python2.7/dist-packages/allauth/ 



--> Eliminar base de datos de una app
	python manage.py sqlclear establishment_system | python manage.py dbshell



--> Jquery rating http://plugins.krajee.com/star-rating

https://github.com/crucialfelix/django-ajax-selects
http://django-selectable.readthedocs.org/en/v0.8.X/testing.html
http://django-filter.readthedocs.org/en/latest/usage.html
https://pypi.python.org/pypi/django-admin-flexselect/0.4.1
https://github.com/digi604/django-smart-selects

https://github.com/FinalsClub/django-ajax-selects-cascade  <--- interesa -->


--> 




http://django-generic-ratings.readthedocs.org/en/latest/signals.html votos



#para convertir las apps a south
python manage.py convert_to_south myap

#Para crear una migracion inicial de un modelo
	python manage.py schemamigration establishment_system --init
	#aplicamps
	python manage.py migrate establishment_system
	#si sale error
	python manage.py migrate establishment_system --fake

#para cuando cambia un modelo
	python manage.py schemamigration establishment_system --auto
	#aplicamos los cambios
 	python manage.py migrate establishment_system



--> Error list
<ul class="errorlist">
            {% if form.non_field_errors %}
                <li>{{ form.non_field_errors }}</li>
            {% endif %}
            {% for field in form %}
                {% if field.errors %}
                    <li>
                        {{ field.label }}
                        <ul class="errorlist">
                        {% for error in field.errors %}
                            <li>{{ error }}</li>
                        {% endfor %}
                        </ul>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>




--> Para instalar postgresql con portgis use:

http://wiki.openstreetmap.org/wiki/PostGIS/Installation#Ubuntu_14.04_LTS_2
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04
http://www.hackido.com/2014/04/setting-up-postgres-for-local.html
https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-django-with-postgres-nginx-and-gunicorn

--> Despues de todo
	sudo -i -u postgres
	createdb recomendadorUD_database
	psql recomendadorUD_database

	CREATE EXTENSION postgis;
	CREATE EXTENSION postgis_topology;
	\q
	exit


	--> Users y passwords
		postgres=RecomendadorUD_root_Django
		acces_django=acces_django_pass

		Crear usuario https://chartio.com/docs/datasources/connections/details/pgadmin


--> nginx y Gnicorn Deplyment

	gunicorn RecomendadorUD.wsgi:application --bind=127.0.0.1:8001 <-- DOnde este el manage.py

	sudo service nginx restart	


--> Para instalar sqlite con spatialite


	sudo apt-get install libproj-dev
	sudo apt-get install libspatialite-dev libspatialite
	sudo apt-get install spatialite-bin
	sudo apt-get install python-pysqlite2

	--> Luego de esto es necesario inicialziar la base de datos
	spatialite spatial_db.db "SELECT InitSpatialMetaData();"

--> configuración redis
	sudo mkdir /etc/redis
	sudo mkdir /var/redis

--> VARIBLES DE ENTORNO SETTIGNS.py
	export POSTGRESDATABASE_USER='acces_django'
	export POSTGRESDATABASE_PASSWORD='acces_django_pass'
	export SECRET_KEY='oo*-tbab-(tdkyvo6bdc9=ir+75@#@bio^5w$17p9%l$qfdd55'
	export MANDRILL_API_KEY='dF6LAeaL1H2ZGsbU-Ypu6Q'

	# Twitter:
    #     Apikey=6cO8HoMTIuOaMAyFNT1yxSea0
    #     Secret=XolegaJvDWvyGREcziHv8q7GkyKsXNUjEmJh0lVRY4HM8B2N0c

    # Facebook:
    #     ApiKey=543350239130783
    #     apiSecret=7a6bc2911c658b8418131d057ab44335

    # Google+:
    #     ApiKey=481544714964-9jtarg0p2l7qm4ep7ea4u3ors9hpd43b.apps.googleusercontent.com
    #     secret=HY5M6bs8qpX02dcSsqKtCJ3-


--> NewRelic
	Login -->   https://rpm.newrelic.com/
	newrelic-admin generate-config b0d0c585215e4933295417a86903debf3fe6ab17 newrelic.ini
